---

- set_fact:
    short_deb_pkg_name: "{{ pkg_name.split('=')[0] }}"
  when: ansible_distribution_file_variety == 'Debian'
  tags:
    - uninstall_package

- name: Enable module
  shell: dnf module enable -y "{{ module_name }}:{{ module_stream }}:{{ module_version }}"
  when: >
    ansible_facts.os_family == 'RedHat' and
    module_name is defined and module_stream is defined and module_version is defined
  tags:
    - install_package

- name: Install RPM package (8 and higher)
  dnf:
    name: "{{ pkg_name }}"
    state: present
    allow_downgrade: true
    allowerasing: true
    lock_timeout: 300
  when: ansible_facts.os_family == 'RedHat' and ansible_facts.distribution_major_version >= '8'
  tags:
    - install_package

- name: Install RPM package (7 and lower)
  yum:
    name: "{{ pkg_name }}"
    state: present
    allow_downgrade: true
    lock_timeout: 300
  when: ansible_facts.os_family == 'RedHat' and ansible_facts.distribution_major_version < '8'
  tags:
    - install_package

- name: Install DEB package
  apt:
    name: "{{ pkg_name }}"
    state: present
    allow_unauthenticated: true
  when: ansible_distribution_file_variety == 'Debian'
  tags:
    - install_package

- name: Check RPM package is installed
  shell:
    cmd: "rpm -q {{ pkg_name }}"
  register: rpm_installed
  failed_when: rpm_installed.rc not in [0, 1]
  when: ansible_facts.os_family == 'RedHat'
  tags:
    - uninstall_package

- name: Uninstall RPM package
  shell:
    cmd: "rpm -e --nodeps {{ pkg_name }}"
  register: result
  retries: 30
  delay: 10
  until: result.rc == 0
  when: ansible_facts.os_family == 'RedHat' and rpm_installed.rc == 0
  tags:
    - uninstall_package

- name: Check DEB package is installed
  shell:
    cmd: "dpkg-query -Wf '${db:Status-Status} ${Package}\n' {{ short_deb_pkg_name }}"
  register: deb_installed
  failed_when: deb_installed.rc not in [0, 1]
  when: ansible_distribution_file_variety == 'Debian'
  tags:
    - uninstall_package

- name: Uninstall DEB package
  shell:
    cmd: "dpkg -r --force-depends {{ short_deb_pkg_name }}"
  register: result
  retries: 30
  delay: 10
  until: result.rc == 0
  when: ansible_distribution_file_variety == 'Debian' and deb_installed.rc == 0
  tags:
    - uninstall_package
