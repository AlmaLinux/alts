---

- name: Update all packages
  apt:
    name: "*"
    state: latest

- name: Install custom apt.conf
  template:
    src: custom-apt.conf.j2
    dest: /etc/apt/apt.conf.d/99test-system-conf
    mode: 0644
    owner: root
    group: root

- name: Check /etc/dpkg/dpkg.cfg.d/excludes presence
  stat:
    path: /etc/dpkg/dpkg.cfg.d/excludes
  register: excludes_exists

- name: Allow man pages and documentation to be installed
  lineinfile:
    path: /etc/dpkg/dpkg.cfg.d/excludes
    regexp: "{{ item.initial }}"
    line: "{{ item.desired }}"
  with_items:
    - { initial: "^path-exclude=/usr/share/man", desired: "#path-exclude=/usr/share/man" }
    - { initial: "^path-exclude=/usr/share/doc", desired: "#path-exclude=/usr/share/doc" }
    - { initial: "^path-exclude=/usr/share/locale", desired: "#path-exclude=/usr/share/locale/*/LC_MESSAGES/*.mo" }
  when: excludes_exists.stat.exists

- name: Update apt metadata
  shell: apt update

- name: Add buster-backports repository
  apt_repository:
    repo: "deb http://archive.debian.org/debian buster-backports main"
    filename: "buster-backports"
    update_cache: yes
  when: "ansible_facts.distribution == 'Debian' and ansible_facts.distribution_release == 'buster'"

- name: Install newer iptables for Debian 10
  shell:
    cmd: apt-get -y -t buster-backports install iptables
  environment:
    DEBIAN_FRONTEND: noninteractive
  when: "ansible_facts.distribution == 'Debian' and ansible_facts.distribution_release == 'buster'"

- name: Delete buster-backports repository
  apt_repository:
    repo: "deb http://archive.debian.org/debian buster-backports main"
    filename: "buster-backports"
    state: absent
  when: "ansible_facts.distribution == 'Debian' and ansible_facts.distribution_release == 'buster'"

- name: Install additional packages
  apt:
    name:
      - ansible
      - apt-transport-https
      - bats
      - python3-pip
      - ca-certificates
      - "{{ procps_pkg }}"
    state: present

- name: Set fact about Ubuntu 22.04
  set_fact:
    enable_rollout_repos: "{{ (ansible_distribution in ['Ubuntu']) and (ansible_distribution_version in ['22.04']) }}"

- name: Check if cloudlinux-rollout-bypass.list.disabled exists
  stat:
    path: /etc/apt/sources.list.d/cloudlinux-rollout-bypass.list.disabled
  register: rollout_bypass_list
  when: enable_rollout_repos

- name: Rename cloudlinux-rollout-bypass.list.disabled to cloudlinux-rollout-bypass.list
  command: mv /etc/apt/sources.list.d/cloudlinux-rollout-bypass.list.disabled /etc/apt/sources.list.d/cloudlinux-rollout-bypass.list
  when:
    - enable_rollout_repos
    - rollout_bypass_list.stat.exists

- name: Uncomment lines in cloudlinux-rollout-bypass.list
  replace:
    path: /etc/apt/sources.list.d/cloudlinux-rollout-bypass.list
    regexp: '^#\s*(deb\s+.*)'
    replace: '\1'
  when:
    - enable_rollout_repos
    - rollout_bypass_list.stat.exists

- name: Update apt metadata after enabling new repos
  shell: apt update
  when:
    - enable_rollout_repos
    - rollout_bypass_list.stat.exists

- name: Add required repositories
  apt_repository:
    repo: "{{ item.url }}"
    filename: 'test_repos'
    update_cache: yes
  with_items: "{{ repositories }}"
  when: repositories is defined and (repositories | length > 0)
