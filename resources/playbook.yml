---
- name: Prepare environment
  hosts: all
  remote_user: root
  vars:
    procps_pkg: "procps"
  tasks:
    - name: Initial provision (RedHat-like distros)
      block:
        - name: Add os and updates repositories
          yum_repository:
            name: "centos-6-{{ item }}"
            baseurl: "https://vault.centos.org/6.10/{{ item }}/$basearch/"
            description: "CentOS 6 {{ item }} repository"
            enabled: yes
            gpgcheck: yes
            gpgkey: https://vault.centos.org/6.10/os/$basearch/RPM-GPG-KEY-CentOS-6
          with_items:
            - "os"
            - "updates"
          when: "ansible_facts.os_family == 'RedHat' and ansible_facts.distribution_major_version == '6'"

        - name: Add YUM proxy
          ini_file:
            path: /etc/yum.conf
            section: main
            option: proxy
            value: "{{ package_proxy }}"
          when: "package_proxy is defined and package_proxy and package_proxy | lower != 'none'"

        - name: Install epel-release
          yum:
            name: epel-release
            state: present
          when: "ansible_facts.os_family == 'RedHat' and ansible_facts.distribution_major_version != '6'"

        - name: Install epel-release
          yum:
            name: "{{ centos_6_epel_release_url }}"
            state: present
          when: "ansible_facts.os_family == 'RedHat' and ansible_facts.distribution_major_version == '6'"

        - name: Re-define procps package name
          set_fact:
            procps_pkg: "procps-ng"
          when: "ansible_facts.os_family == 'RedHat' and ansible_facts.distribution_major_version > '6'"

        - name: Update all packages
          package:
            name: "*"
            state: latest

        - name: Install additional packages
          yum:
            name:
              - ansible
              - bats
              - file
              - iproute
              - "{{ procps_pkg }}"
            enablerepo: epel
            state: present

        - name: Install pip package (8 and higher)
          dnf:
            name: ["python3-pip", "python3-setuptools"]
            state: present
          when: "ansible_facts.os_family == 'RedHat' and ansible_facts.distribution_major_version >= '8'"

        - name: Install pip package (7 and less)
          yum:
            name: [ "python-pip", "python-setuptools" ]
            state: present
            enablerepo: epel
          when: "ansible_facts.os_family == 'RedHat' and ansible_facts.distribution_major_version < '8'"

        - name: Add required repositories
          yum_repository:
            name: "{{ item.name }}"
            baseurl: "{{ item.url }}"
            description: "Repository {{ item.name }}"
            enabled: yes
            gpgcheck: no
          with_items: "{{ repositories }}"
          when: repositories is defined and (repositories | length > 0)
      when: ansible_distribution_file_variety == 'RedHat'
      tags:
        - initial_provision

    - name: Initial provision (Debian-like distros)
      block:
        - name: Update all packages
          apt:
            name: "*"
            state: latest

        - name: Install custom apt.conf
          template:
            src: custom-apt.conf.j2
            dest: /etc/apt/apt.conf.d/test-system-conf
            mode: 0644
            owner: root
            group: root

        - name: Update apt metadata
          shell: apt update

        - name: Install additional packages
          apt:
            name:
              - ansible
              - apt-transport-https
              - bats
              - python3-pip
              - ca-certificates
              - "{{ procps_pkg }}"
            state: present

        - name: Add required repositories
          apt_repository:
            repo: "{{ item.url }}"
            filename: 'test_repos'
            update_cache: yes
          with_items: "{{ repositories }}"
          when: repositories is defined and (repositories | length > 0)
      when: ansible_distribution_file_variety == 'Debian'
      tags:
        - initial_provision

    - name: Copy tests to test environment
      copy:
        src: "{{ integrity_tests_dir }}"
        dest: /tests
      tags:
        - initial_provision

    - name: Install tools for running tests
      pip:
        name:
          - pytest
          - pytest-testinfra
          - pytest-check
          - pytest-tap
      when: pytest_is_needed | bool
      tags:
        - initial_provision

    - name: Delete /etc/rpm/macros.image-language-conf
      file:
        path: /etc/rpm/macros.image-language-conf
        state: absent
      when: ansible_distribution_file_variety == 'RedHat'
      tags:
        - initial_provision

    - name: Install custom ldconfig
      lineinfile:
        path: /etc/ld.so.conf.d/custom-ts.conf
        line: "{{ item }}"
        create: yes
        owner: root
        group: root
        mode: 0644
      with_items:
        - "/usr/lib64/firefox"
        - "/usr/lib64/thunderbird"
      tags:
        - initial_provision

    - name: Reload ldconfig
      shell: ldconfig
      tags:
        - initial_provision

    - name: Enable module
      shell: dnf module enable -y "{{ module_name }}:{{ module_stream }}:{{ module_version }}"
      when: ansible_distribution_file_variety == 'RedHat' and module_name is defined and module_stream is defined and module_version is defined
      tags:
        - install_package

    - name: Install package
      yum:
        name: "{{ pkg_name }}"
        state: present
      when: ansible_distribution_file_variety == 'RedHat'
      tags:
        - install_package

    - name: Install package
      apt:
        name: "{{ pkg_name }}"
        state: present
        allow_unauthenticated: true
      when: ansible_distribution_file_variety == 'Debian'
      tags:
        - install_package

    - name: Uninstall package
      yum:
        name: "{{ pkg_name }}"
        state: absent
      when: ansible_distribution_file_variety == 'RedHat'
      tags:
        - uninstall_package

    - name: Uninstall package
      apt:
        name: "{{ pkg_name }}"
        state: absent
      when: ansible_distribution_file_variety == 'Debian'
      tags:
        - uninstall_package
