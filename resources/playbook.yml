---
- name: Prepare environment
  hosts: all
  remote_user: root
  tasks:
    - name: Initial provision (RedHat-like distros)
      block:
        - name: Update all packages
          package:
            name: "*"
            state: latest

        - name: Install additional packages
          yum:
            name: ["file", "iproute", "procps-ng"]
            state: present

        - name: Install pip package (8 and higher)
          dnf:
            name: ["python3-pip", "python3-setuptools"]
            state: present
          when: "ansible_facts.os_family == 'RedHat' and ansible_facts.distribution_major_version >= '8'"

        - name: Install epel release
          yum:
            name: epel-release
            state: present
          when: "ansible_facts.os_family == 'RedHat' and ansible_facts.distribution_major_version < '8'"

        - name: Install pip package (7 and less)
          yum:
            name: [ "python-pip", "python-setuptools" ]
            state: present
            enablerepo: epel
          when: "ansible_facts.os_family == 'RedHat' and ansible_facts.distribution_major_version < '8'"

        - name: Add required repositories
          yum_repository:
            name: "{{ item.name }}"
            baseurl: "{{ item.url }}"
            description: "Repository {{ item.name }}"
            enabled: yes
            gpgcheck: no
          with_items: "{{ repositories }}"
          when: repositories is defined and (repositories | length > 0)
      when: ansible_distribution_file_variety == 'RedHat'
      tags:
        - initial_provision

    - name: Initial provision (Debian-like distros)
      block:
        - name: Update all packages
          apt:
            name: "*"
            state: latest

        - name: Install additional packages
          apt:
            name: "python3-pip"
            state: latest

        - name: Install custom apt.conf
          template:
            src: custom-apt.conf
            dest: /etc/apt/apt.conf.d/test-system-conf
            mode: 0644
            owner: root
            group: root

        - name: Add required repositories
          apt_repository:
            repo: "{{ item.url }}"
            filename: 'test_repos'
            update_cache: yes
          with_items: "{{ repositories }}"
          when: repositories is defined and (repositories | length > 0)
      when: ansible_distribution_file_variety == 'Debian'
      tags:
        - initial_provision

    - name: Copy tests to test environment
      copy:
        src: "{{ integrity_tests_dir }}"
        dest: /tests
      tags:
        - initial_provision

    - name: Install tools for running tests
      pip:
        name:
          - pytest
          - pytest-testinfra
          - pytest-check
          - pytest-tap
      when: pytest_is_needed | bool
      tags:
        - initial_provision

    - name: Install binaries for test executors
      yum:
        name:
          - epel-release
          - git
        state: latest
      when: ansible_distribution_file_variety == 'RedHat'
      ignore_errors: true
      tags:
        - initial_provision

    - name: Install ansible
      yum:
        name:
          - ansible-core
        state: latest
      when: ansible_distribution_file_variety == 'RedHat' and connection_type == 'ssh'
      ignore_errors: true
      tags:
        - initial_provision

    - name: Install bats
      block:
        - name: Gather the package facts
          package_facts:
            manager: auto
        - name: Install missing bats
          shell: |
            git clone https://github.com/bats-core/bats-core.git
            cd bats-core
            sh ./install.sh /usr/local
          ignore_errors: true
          when: "'bats' not in ansible_facts.packages"
      tags:
        - initial_provision

    - name: Delete /etc/rpm/macros.image-language-conf
      file:
        path: /etc/rpm/macros.image-language-conf
        state: absent
      when: ansible_distribution_file_variety == 'RedHat'
      tags:
        - initial_provision

    - name: Install custom ldconfig
      lineinfile:
        path: /etc/ld.so.conf.d/custom-ts.conf
        line: "{{ item }}"
        create: yes
        owner: root
        group: root
        mode: 0644
      with_items:
        - "/usr/lib64/firefox"
        - "/usr/lib64/thunderbird"
      tags:
        - initial_provision

    - name: Reload ldconfig
      shell: ldconfig
      tags:
        - initial_provision

    - name: Enable module
      shell: dnf module enable -y "{{ module_name }}:{{ module_stream }}:{{ module_version }}"
      when: ansible_distribution_file_variety == 'RedHat' and module_name is defined and module_stream is defined and module_version is defined
      tags:
        - install_package

    - name: Install package
      yum:
        name: "{{ pkg_name }}"
        state: present
      when: ansible_distribution_file_variety == 'RedHat'
      tags:
        - install_package

    - name: Install package
      apt:
        name: "{{ pkg_name }}"
        state: present
        allow_unauthenticated: true
      when: ansible_distribution_file_variety == 'Debian'
      tags:
        - install_package

    - name: Uninstall package
      yum:
        name: "{{ pkg_name }}"
        state: absent
      when: ansible_distribution_file_variety == 'RedHat'
      tags:
        - uninstall_package

    - name: Uninstall package
      apt:
        name: "{{ pkg_name }}"
        state: absent
      when: ansible_distribution_file_variety == 'Debian'
      tags:
        - uninstall_package
